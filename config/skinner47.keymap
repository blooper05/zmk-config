#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_escape    { key-positions = <0  1>;  bindings = <&kp ESCAPE>;    timeout-ms = <50>;  };
        combo_backspace { key-positions = <10 11>; bindings = <&kp BACKSPACE>; timeout-ms = <50>;  };
        combo_return    { key-positions = <12 31>; bindings = <&kp RETURN>;    timeout-ms = <500>; };

        combo_ga    { layers = <6>; key-positions = <44 2>;  bindings = <&jp_GA>;    };
        combo_da    { layers = <6>; key-positions = <44 3>;  bindings = <&jp_DA>;    };
        combo_go    { layers = <6>; key-positions = <44 4>;  bindings = <&jp_GO>;    };
        combo_za    { layers = <6>; key-positions = <44 5>;  bindings = <&jp_ZA>;    };
        combo_pa    { layers = <6>; key-positions = <41 6>;  bindings = <&jp_PA>;    };
        combo_di    { layers = <6>; key-positions = <41 7>;  bindings = <&jp_DI>;    };
        combo_gu    { layers = <6>; key-positions = <41 8>;  bindings = <&jp_GU>;    };
        combo_du    { layers = <6>; key-positions = <41 9>;  bindings = <&jp_DU>;    };
        combo_pi    { layers = <6>; key-positions = <41 10>; bindings = <&jp_PI>;    };

        combo_vu    { layers = <6>; key-positions = <44 13>; bindings = <&jp_VU>;    };
        combo_zi    { layers = <6>; key-positions = <44 14>; bindings = <&jp_ZI>;    };
        combo_de    { layers = <6>; key-positions = <44 15>; bindings = <&jp_DE>;    };
        combo_ge    { layers = <6>; key-positions = <44 16>; bindings = <&jp_GE>;    };
        combo_ze    { layers = <6>; key-positions = <44 17>; bindings = <&jp_ZE>;    };
        combo_ba    { layers = <6>; key-positions = <41 18>; bindings = <&jp_BA>;    };
        combo_do    { layers = <6>; key-positions = <41 19>; bindings = <&jp_DO>;    };
        combo_gi    { layers = <6>; key-positions = <41 20>; bindings = <&jp_GI>;    };
        combo_po    { layers = <6>; key-positions = <41 21>; bindings = <&jp_PO>;    };

        combo_bi    { layers = <6>; key-positions = <44 26>; bindings = <&jp_BI>;    };
        combo_zu    { layers = <6>; key-positions = <44 27>; bindings = <&jp_ZU>;    };
        combo_bu    { layers = <6>; key-positions = <44 28>; bindings = <&jp_BU>;    };
        combo_be    { layers = <6>; key-positions = <44 29>; bindings = <&jp_BE>;    };
        combo_pu    { layers = <6>; key-positions = <41 30>; bindings = <&jp_PU>;    };
        combo_zo    { layers = <6>; key-positions = <41 31>; bindings = <&jp_ZO>;    };
        combo_pe    { layers = <6>; key-positions = <41 32>; bindings = <&jp_PE>;    };
        combo_bo    { layers = <6>; key-positions = <41 33>; bindings = <&jp_BO>;    };

        combo_la    { layers = <6>; key-positions = <41 1>;  bindings = <&jp_LA>;    };
        combo_e     { layers = <6>; key-positions = <41 2>;  bindings = <&jp_E>;     };
        combo_ri    { layers = <6>; key-positions = <41 3>;  bindings = <&jp_RI>;    };
        combo_lya   { layers = <6>; key-positions = <41 4>;  bindings = <&jp_LYA>;   };
        combo_re    { layers = <6>; key-positions = <41 5>;  bindings = <&jp_RE>;    };
        combo_yo    { layers = <6>; key-positions = <44 6>;  bindings = <&jp_YO>;    };
        combo_ni    { layers = <6>; key-positions = <44 7>;  bindings = <&jp_NI>;    };
        combo_ru    { layers = <6>; key-positions = <44 8>;  bindings = <&jp_RU>;    };
        combo_ma    { layers = <6>; key-positions = <44 9>;  bindings = <&jp_MA>;    };
        combo_le    { layers = <6>; key-positions = <44 10>; bindings = <&jp_LE>;    };

        combo_wo    { layers = <6>; key-positions = <41 13>; bindings = <&jp_WO>;    };
        combo_a     { layers = <6>; key-positions = <41 14>; bindings = <&jp_A>;     };
        combo_na    { layers = <6>; key-positions = <41 15>; bindings = <&jp_NA>;    };
        combo_lyu   { layers = <6>; key-positions = <41 16>; bindings = <&jp_LYU>;   };
        combo_mo    { layers = <6>; key-positions = <41 17>; bindings = <&jp_MO>;    };
        combo_mi    { layers = <6>; key-positions = <44 18>; bindings = <&jp_MI>;    };
        combo_o     { layers = <6>; key-positions = <44 19>; bindings = <&jp_O>;     };
        combo_no    { layers = <6>; key-positions = <44 20>; bindings = <&jp_NO>;    };
        combo_lyo   { layers = <6>; key-positions = <44 21>; bindings = <&jp_LYO>;   };
        combo_ltu   { layers = <6>; key-positions = <44 22>; bindings = <&jp_LTU>;   };
        combo_lwa   { layers = <6>; key-positions = <44 23>; bindings = <&jp_LWA>;   };

        combo_lu    { layers = <6>; key-positions = <41 25>; bindings = <&jp_LU>;    };
        combo_minus { layers = <6>; key-positions = <41 26>; bindings = <&jp_MINUS>; };
        combo_ro    { layers = <6>; key-positions = <41 27>; bindings = <&jp_RO>;    };
        combo_ya    { layers = <6>; key-positions = <41 28>; bindings = <&jp_YA>;    };
        combo_li    { layers = <6>; key-positions = <41 29>; bindings = <&jp_LI>;    };
        combo_nu    { layers = <6>; key-positions = <44 30>; bindings = <&jp_NU>;    };
        combo_yu    { layers = <6>; key-positions = <44 31>; bindings = <&jp_YU>;    };
        combo_mu    { layers = <6>; key-positions = <44 32>; bindings = <&jp_MU>;    };
        combo_wa    { layers = <6>; key-positions = <44 33>; bindings = <&jp_WA>;    };
        combo_lo    { layers = <6>; key-positions = <44 34>; bindings = <&jp_LO>;    };
    };

    macros {
        ZMK_MACRO(eisuu, bindings = <&kp LANGUAGE_2>, <&to 0>; wait-ms = <40>; tap-ms = <40>;)
        ZMK_MACRO(kana,  bindings = <&kp LANGUAGE_1>, <&to 6>; wait-ms = <40>; tap-ms = <40>;)

        ZMK_MACRO(jp_PERIOD, bindings = <&kp PERIOD>;)
        ZMK_MACRO(jp_KA,     bindings = <&kp K &kp A>;)
        ZMK_MACRO(jp_TA,     bindings = <&kp T &kp A>;)
        ZMK_MACRO(jp_KO,     bindings = <&kp K &kp O>;)
        ZMK_MACRO(jp_SA,     bindings = <&kp S &kp A>;)
        ZMK_MACRO(jp_RA,     bindings = <&kp R &kp A>;)
        ZMK_MACRO(jp_CHI,    bindings = <&kp T &kp I>;)
        ZMK_MACRO(jp_KU,     bindings = <&kp K &kp U>;)
        ZMK_MACRO(jp_TSU,    bindings = <&kp T &kp U>;)
        ZMK_MACRO(jp_COMMA,  bindings = <&kp COMMA>;)

        ZMK_MACRO(jp_U,      bindings = <&kp U>;)
        ZMK_MACRO(jp_SHI,    bindings = <&kp S &kp I>;)
        ZMK_MACRO(jp_TE,     bindings = <&kp T &kp E>;)
        ZMK_MACRO(jp_KE,     bindings = <&kp K &kp E>;)
        ZMK_MACRO(jp_SE,     bindings = <&kp S &kp E>;)
        ZMK_MACRO(jp_HA,     bindings = <&kp H &kp A>;)
        ZMK_MACRO(jp_TO,     bindings = <&kp T &kp O>;)
        ZMK_MACRO(jp_KI,     bindings = <&kp K &kp I>;)
        ZMK_MACRO(jp_I,      bindings = <&kp I>;)
        ZMK_MACRO(jp_N,      bindings = <&kp N &kp N>;)

        ZMK_MACRO(jp_HI,     bindings = <&kp H &kp I>;)
        ZMK_MACRO(jp_SU,     bindings = <&kp S &kp U>;)
        ZMK_MACRO(jp_FU,     bindings = <&kp H &kp U>;)
        ZMK_MACRO(jp_HE,     bindings = <&kp H &kp E>;)
        ZMK_MACRO(jp_ME,     bindings = <&kp M &kp E>;)
        ZMK_MACRO(jp_SO,     bindings = <&kp S &kp O>;)
        ZMK_MACRO(jp_NE,     bindings = <&kp N &kp E>;)
        ZMK_MACRO(jp_HO,     bindings = <&kp H &kp O>;)

        ZMK_MACRO(jp_GA,     bindings = <&kp G &kp A>;)
        ZMK_MACRO(jp_DA,     bindings = <&kp D &kp A>;)
        ZMK_MACRO(jp_GO,     bindings = <&kp G &kp O>;)
        ZMK_MACRO(jp_ZA,     bindings = <&kp Z &kp A>;)
        ZMK_MACRO(jp_PA,     bindings = <&kp P &kp A>;)
        ZMK_MACRO(jp_DI,     bindings = <&kp D &kp I>;)
        ZMK_MACRO(jp_GU,     bindings = <&kp G &kp U>;)
        ZMK_MACRO(jp_DU,     bindings = <&kp D &kp U>;)
        ZMK_MACRO(jp_PI,     bindings = <&kp P &kp I>;)

        ZMK_MACRO(jp_VU,     bindings = <&kp V &kp U>;)
        ZMK_MACRO(jp_ZI,     bindings = <&kp Z &kp I>;)
        ZMK_MACRO(jp_DE,     bindings = <&kp D &kp E>;)
        ZMK_MACRO(jp_GE,     bindings = <&kp G &kp E>;)
        ZMK_MACRO(jp_ZE,     bindings = <&kp Z &kp E>;)
        ZMK_MACRO(jp_BA,     bindings = <&kp B &kp A>;)
        ZMK_MACRO(jp_DO,     bindings = <&kp D &kp O>;)
        ZMK_MACRO(jp_GI,     bindings = <&kp G &kp I>;)
        ZMK_MACRO(jp_PO,     bindings = <&kp P &kp O>;)

        ZMK_MACRO(jp_BI,     bindings = <&kp B &kp I>;)
        ZMK_MACRO(jp_ZU,     bindings = <&kp Z &kp U>;)
        ZMK_MACRO(jp_BU,     bindings = <&kp B &kp U>;)
        ZMK_MACRO(jp_BE,     bindings = <&kp B &kp E>;)
        ZMK_MACRO(jp_PU,     bindings = <&kp P &kp U>;)
        ZMK_MACRO(jp_ZO,     bindings = <&kp Z &kp O>;)
        ZMK_MACRO(jp_PE,     bindings = <&kp P &kp E>;)
        ZMK_MACRO(jp_BO,     bindings = <&kp B &kp O>;)

        ZMK_MACRO(jp_LA,     bindings = <&kp L &kp A>;)
        ZMK_MACRO(jp_E,      bindings = <&kp E>;)
        ZMK_MACRO(jp_RI,     bindings = <&kp R &kp I>;)
        ZMK_MACRO(jp_LYA,    bindings = <&kp L &kp Y &kp A>;)
        ZMK_MACRO(jp_RE,     bindings = <&kp R &kp E>;)
        ZMK_MACRO(jp_YO,     bindings = <&kp Y &kp O>;)
        ZMK_MACRO(jp_NI,     bindings = <&kp N &kp I>;)
        ZMK_MACRO(jp_RU,     bindings = <&kp R &kp U>;)
        ZMK_MACRO(jp_MA,     bindings = <&kp M &kp A>;)
        ZMK_MACRO(jp_LE,     bindings = <&kp L &kp E>;)

        ZMK_MACRO(jp_WO,     bindings = <&kp W &kp O>;)
        ZMK_MACRO(jp_A,      bindings = <&kp A>;)
        ZMK_MACRO(jp_NA,     bindings = <&kp N &kp A>;)
        ZMK_MACRO(jp_LYU,    bindings = <&kp L &kp Y &kp U>;)
        ZMK_MACRO(jp_MO,     bindings = <&kp M &kp O>;)
        ZMK_MACRO(jp_MI,     bindings = <&kp M &kp I>;)
        ZMK_MACRO(jp_O,      bindings = <&kp O>;)
        ZMK_MACRO(jp_NO,     bindings = <&kp N &kp O>;)
        ZMK_MACRO(jp_LYO,    bindings = <&kp L &kp Y &kp O>;)
        ZMK_MACRO(jp_LTU,    bindings = <&kp L &kp T &kp U>;)
        ZMK_MACRO(jp_LWA,    bindings = <&kp L &kp W &kp A>;)

        ZMK_MACRO(jp_LU,     bindings = <&kp L &kp U>;)
        ZMK_MACRO(jp_MINUS,  bindings = <&kp MINUS>;)
        ZMK_MACRO(jp_RO,     bindings = <&kp R &kp O>;)
        ZMK_MACRO(jp_YA,     bindings = <&kp Y &kp A>;)
        ZMK_MACRO(jp_LI,     bindings = <&kp L &kp I>;)
        ZMK_MACRO(jp_NU,     bindings = <&kp N &kp U>;)
        ZMK_MACRO(jp_YU,     bindings = <&kp Y &kp U>;)
        ZMK_MACRO(jp_MU,     bindings = <&kp M &kp U>;)
        ZMK_MACRO(jp_WA,     bindings = <&kp W &kp A>;)
        ZMK_MACRO(jp_LO,     bindings = <&kp L &kp O>;)
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB           &kp Q  &kp W   &kp E   &kp R         &kp T                       &kp Y        &kp U  &kp I      &kp O       &kp P            &kp LEFT_BRACKET
&kp LEFT_CONTROL  &kp A  &kp S   &kp D   &kp F         &kp G                       &kp H        &kp J  &kp K      &kp L       &lt 4 SEMICOLON  &kp SINGLE_QUOTE
&kp LEFT_SHIFT    &kp Z  &kp X   &kp C   &kp V         &kp B                       &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH        &kp RIGHT_SHIFT
&mo 2             &mo 3  &trans  &trans  &kp LEFT_GUI  &lt 1 SPACE  &eisuu  &kana  &lt 1 SPACE                                &mo 3            &mo 2
            >;
        };

        number_layer {
            bindings = <
&kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp MINUS
&trans     &trans        &trans        &trans        &trans        &trans                        &trans        &trans        &trans        &trans        &trans        &kp EQUAL
&trans     &trans        &trans        &trans        &trans        &trans                        &trans        &trans        &trans        &trans        &trans        &kp BACKSLASH
&trans     &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans                                                  &trans        &trans
            >;
        };

        symbol_layer {
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                  &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&trans     &trans           &trans       &trans    &trans      &trans                       &trans     &trans         &trans        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PLUS
&trans     &trans           &trans       &trans    &trans      &trans                       &trans     &trans         &trans        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE
&trans     &trans           &trans       &trans    &trans      &trans       &trans  &trans  &trans                                                        &trans                 &trans
            >;
        };

        function_layer {
            bindings = <
&bootloader  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                  &kp F6          &kp F7          &kp F8        &kp F9           &kp F10  &bootloader
&trans       &trans  &trans  &trans  &trans  &trans                  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans   &trans
&trans       &trans  &trans  &trans  &trans  &trans                  &trans          &trans          &trans        &trans           &trans   &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                                         &trans   &trans
            >;
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans    &trans    &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans    &mkp MB1  &mkp MB2  &mo 5   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans    &trans    &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MB4  &mkp MB5                              &trans  &trans
            >;
        };

        scroll_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans    &trans    &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans    &mkp MB1  &mkp MB2  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans    &trans    &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MB4  &mkp MB5                              &trans  &trans
            >;
        };

        thumb_shift_layer {
            bindings = <
&trans  &jp_PERIOD  &jp_KA   &jp_TA  &jp_KO  &jp_SA                  &jp_RA  &jp_CHI  &jp_KU  &jp_TSU  &jp_COMMA  &trans
&trans  &jp_U       &jp_SHI  &jp_TE  &jp_KE  &jp_SE                  &jp_HA  &jp_TO   &jp_KI  &jp_I    &jp_N      &kp BACKSPACE
&trans  &trans      &jp_HI   &jp_SU  &jp_FU  &jp_HE                  &jp_ME  &jp_SO   &jp_NE  &jp_HO   &trans     &trans
&trans  &trans      &trans   &trans  &trans  &trans  &trans  &trans  &trans                            &trans     &trans
            >;
        };
    };
};
