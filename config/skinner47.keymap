#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_escape {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESCAPE>;
        };

        combo_backspace {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp BACKSPACE>;
        };

        combo_return {
            timeout-ms = <200>;
            key-positions = <12 31>;
            bindings = <&kp RETURN>;
        };

        combo_ga {
            timeout-ms = <50>;
            key-positions = <44 2>;
            bindings = <&jp_GA>;
            layers = <6>;
        };

        combo_da {
            timeout-ms = <50>;
            key-positions = <44 3>;
            bindings = <&jp_DA>;
            layers = <6>;
        };

        combo_go {
            timeout-ms = <50>;
            key-positions = <44 4>;
            bindings = <&jp_GO>;
            layers = <6>;
        };

        combo_za {
            timeout-ms = <50>;
            key-positions = <44 5>;
            bindings = <&jp_ZA>;
            layers = <6>;
        };

        combo_di {
            timeout-ms = <50>;
            key-positions = <41 7>;
            bindings = <&jp_DI>;
            layers = <6>;
        };

        combo_gu {
            timeout-ms = <50>;
            key-positions = <41 8>;
            bindings = <&jp_GU>;
            layers = <6>;
        };

        combo_du {
            timeout-ms = <50>;
            key-positions = <41 9>;
            bindings = <&jp_DU>;
            layers = <6>;
        };

        combo_vu {
            timeout-ms = <50>;
            key-positions = <44 13>;
            bindings = <&jp_VU>;
            layers = <6>;
        };

        combo_zi {
            timeout-ms = <50>;
            key-positions = <44 14>;
            bindings = <&jp_ZI>;
            layers = <6>;
        };

        combo_de {
            timeout-ms = <50>;
            key-positions = <44 15>;
            bindings = <&jp_DE>;
            layers = <6>;
        };

        combo_ge {
            timeout-ms = <50>;
            key-positions = <44 16>;
            bindings = <&jp_GE>;
            layers = <6>;
        };

        combo_ze {
            timeout-ms = <50>;
            key-positions = <44 17>;
            bindings = <&jp_ZE>;
            layers = <6>;
        };

        combo_ba {
            timeout-ms = <50>;
            key-positions = <41 18>;
            bindings = <&jp_BA>;
            layers = <6>;
        };

        combo_do {
            timeout-ms = <50>;
            key-positions = <41 19>;
            bindings = <&jp_DO>;
            layers = <6>;
        };

        combo_gi {
            timeout-ms = <50>;
            key-positions = <41 20>;
            bindings = <&jp_GI>;
            layers = <6>;
        };

        combo_bi {
            timeout-ms = <50>;
            key-positions = <44 26>;
            bindings = <&jp_BI>;
            layers = <6>;
        };

        combo_zu {
            timeout-ms = <50>;
            key-positions = <44 27>;
            bindings = <&jp_ZU>;
            layers = <6>;
        };

        combo_bu {
            timeout-ms = <50>;
            key-positions = <44 28>;
            bindings = <&jp_BU>;
            layers = <6>;
        };

        combo_be {
            timeout-ms = <50>;
            key-positions = <44 29>;
            bindings = <&jp_BE>;
            layers = <6>;
        };

        combo_zo {
            timeout-ms = <50>;
            key-positions = <41 31>;
            bindings = <&jp_ZO>;
            layers = <6>;
        };

        combo_bo {
            timeout-ms = <50>;
            key-positions = <41 33>;
            bindings = <&jp_BO>;
            layers = <6>;
        };
    };

    macros {
        ZMK_MACRO(eisuu,
            wait-ms = <40>;
            tap-ms = <40>;
            bindings = <&kp LANGUAGE_2>, <&to 0>;
        )

        ZMK_MACRO(kana,
            wait-ms = <40>;
            tap-ms = <40>;
            bindings = <&kp LANGUAGE_1>, <&to 6>;
        )

        ZMK_MACRO(jp_PERIOD, bindings = <&kp PERIOD>;)
        ZMK_MACRO(jp_KA,     bindings = <&kp K &kp A>;)
        ZMK_MACRO(jp_TA,     bindings = <&kp T &kp A>;)
        ZMK_MACRO(jp_KO,     bindings = <&kp K &kp O>;)
        ZMK_MACRO(jp_SA,     bindings = <&kp S &kp A>;)
        ZMK_MACRO(jp_RA,     bindings = <&kp R &kp A>;)
        ZMK_MACRO(jp_CHI,    bindings = <&kp T &kp I>;)
        ZMK_MACRO(jp_KU,     bindings = <&kp K &kp U>;)
        ZMK_MACRO(jp_TSU,    bindings = <&kp T &kp U>;)
        ZMK_MACRO(jp_COMMA,  bindings = <&kp COMMA>;)

        ZMK_MACRO(jp_U,      bindings = <&kp U>;)
        ZMK_MACRO(jp_SHI,    bindings = <&kp S &kp I>;)
        ZMK_MACRO(jp_TE,     bindings = <&kp T &kp E>;)
        ZMK_MACRO(jp_KE,     bindings = <&kp K &kp E>;)
        ZMK_MACRO(jp_SE,     bindings = <&kp S &kp E>;)
        ZMK_MACRO(jp_HA,     bindings = <&kp H &kp A>;)
        ZMK_MACRO(jp_TO,     bindings = <&kp T &kp O>;)
        ZMK_MACRO(jp_KI,     bindings = <&kp K &kp I>;)
        ZMK_MACRO(jp_I,      bindings = <&kp I>;)
        ZMK_MACRO(jp_N,      bindings = <&kp N &kp N>;)

        ZMK_MACRO(jp_HI,     bindings = <&kp H &kp I>;)
        ZMK_MACRO(jp_SU,     bindings = <&kp S &kp U>;)
        ZMK_MACRO(jp_FU,     bindings = <&kp H &kp U>;)
        ZMK_MACRO(jp_HE,     bindings = <&kp H &kp E>;)
        ZMK_MACRO(jp_ME,     bindings = <&kp M &kp E>;)
        ZMK_MACRO(jp_SO,     bindings = <&kp S &kp O>;)
        ZMK_MACRO(jp_NE,     bindings = <&kp N &kp E>;)
        ZMK_MACRO(jp_HO,     bindings = <&kp H &kp O>;)

        ZMK_MACRO(jp_GA,     bindings = <&kp G &kp A>;)
        ZMK_MACRO(jp_DA,     bindings = <&kp D &kp A>;)
        ZMK_MACRO(jp_GO,     bindings = <&kp G &kp O>;)
        ZMK_MACRO(jp_ZA,     bindings = <&kp Z &kp A>;)
        ZMK_MACRO(jp_DI,     bindings = <&kp D &kp I>;)
        ZMK_MACRO(jp_GU,     bindings = <&kp G &kp U>;)
        ZMK_MACRO(jp_DU,     bindings = <&kp D &kp U>;)

        ZMK_MACRO(jp_VU,     bindings = <&kp V &kp U>;)
        ZMK_MACRO(jp_ZI,     bindings = <&kp Z &kp I>;)
        ZMK_MACRO(jp_DE,     bindings = <&kp D &kp E>;)
        ZMK_MACRO(jp_GE,     bindings = <&kp G &kp E>;)
        ZMK_MACRO(jp_ZE,     bindings = <&kp Z &kp E>;)
        ZMK_MACRO(jp_BA,     bindings = <&kp B &kp A>;)
        ZMK_MACRO(jp_DO,     bindings = <&kp D &kp O>;)
        ZMK_MACRO(jp_GI,     bindings = <&kp G &kp I>;)

        ZMK_MACRO(jp_BI,     bindings = <&kp B &kp I>;)
        ZMK_MACRO(jp_ZU,     bindings = <&kp Z &kp U>;)
        ZMK_MACRO(jp_BU,     bindings = <&kp B &kp U>;)
        ZMK_MACRO(jp_BE,     bindings = <&kp B &kp E>;)
        ZMK_MACRO(jp_ZO,     bindings = <&kp Z &kp O>;)
        ZMK_MACRO(jp_BO,     bindings = <&kp B &kp O>;)
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB           &kp Q   &kp W   &kp E   &kp R                    &kp T                      &kp Y        &kp U  &kp I      &kp O       &kp P            &kp LEFT_BRACKET
&kp LEFT_CONTROL  &kp A   &kp S   &kp D   &kp F                    &kp G                      &kp H        &kp J  &kp K      &kp L       &lt 4 SEMICOLON  &kp SINGLE_QUOTE
&kp LEFT_SHIFT    &kp Z   &kp X   &kp C   &kp V                    &kp B                      &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH        &kp RIGHT_SHIFT
&mo 2             &trans  &trans  &trans  &mt LEFT_GUI LANGUAGE_2  &lt 1 SPACE  &mo 3  &mo 3  &lt 1 SPACE                                &kana            &mo 2
            >;
        };

        number_layer {
            bindings = <
&kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp MINUS
&trans     &trans        &trans        &trans        &trans        &trans                        &trans        &trans        &trans        &trans        &trans        &kp EQUAL
&trans     &trans        &trans        &trans        &trans        &trans                        &trans        &trans        &trans        &trans        &trans        &kp BACKSLASH
&trans     &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans                                                  &trans        &trans
            >;
        };

        symbol_layer {
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                  &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&trans     &trans           &trans       &trans    &trans      &trans                       &trans     &trans         &trans        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PLUS
&trans     &trans           &trans       &trans    &trans      &trans                       &trans     &trans         &trans        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE
&trans     &trans           &trans       &trans    &trans      &trans       &trans  &trans  &trans                                                        &trans                 &trans
            >;
        };

        function_layer {
            bindings = <
&bootloader  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                  &kp F6          &kp F7          &kp F8        &kp F9           &kp F10  &bootloader
&trans       &trans  &trans  &trans  &trans  &trans                  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans   &trans
&trans       &trans  &trans  &trans  &trans  &trans                  &trans          &trans          &trans        &trans           &trans   &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                                         &trans   &trans
            >;
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans    &trans    &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans    &mkp MB1  &mkp MB2  &mo 5   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans    &trans    &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MB4  &mkp MB5                              &trans  &trans
            >;
        };

        scroll_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans    &trans    &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans    &mkp MB1  &mkp MB2  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans    &trans    &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MB4  &mkp MB5                              &trans  &trans
            >;
        };

        thumb_shift_layer {
            bindings = <
&trans  &jp_PERIOD  &jp_KA   &jp_TA  &jp_KO  &jp_SA                  &jp_RA  &jp_CHI  &jp_KU  &jp_TSU  &jp_COMMA  &trans
&trans  &jp_U       &jp_SHI  &jp_TE  &jp_KE  &jp_SE                  &jp_HA  &jp_TO   &jp_KI  &jp_I    &jp_N      &trans
&trans  &trans      &jp_HI   &jp_SU  &jp_FU  &jp_HE                  &jp_ME  &jp_SO   &jp_NE  &jp_HO   &trans     &trans
&trans  &trans      &trans   &trans  &eisuu  &trans  &trans  &trans  &trans                            &trans     &trans
            >;
        };
    };
};
